# -*- coding: utf-8 -*-
"""TFlite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ljjMWvfE0MfKf8s-gtKaG5nkWLG9r8D4
"""





import numpy as np


from PIL import Image


import tflite_runtime.interpreter as tflite
from keras_image_helper import create_preprocessor

preprocessor = create_preprocessor('xception', target_size=(250, 250))
interpreter = tflite.Interpreter(model_path='cassava.tflite')
interpreter.allocate_tensors()

input_index = interpreter.get_input_details()[0]['index']

output_index = interpreter.get_output_details()[0]['index']

disease_class_list = ['Cassava Bacterial Blight (CBB)',
 'Cassava Brown Streak Disease (CBSD)',
 'Cassava Green Mottle (CGM)',
 'Cassava Mosaic Disease (CMD)',
 'Healthy']

def predict(url):
  X = preprocessor.from_url(url)
  interpreter.set_tensor(input_index, X)
  interpreter.invoke()
  preds = interpreter.get_tensor(output_index)
  float_predictions = preds[0].tolist()
  return dict(zip(disease_class_list, float_predictions)),disease_class_list[np.argmax(preds)]


def lambda_handler(event, context):
    url = event['url']
    result = predict(url)
    return result
